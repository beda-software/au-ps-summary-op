volumes:
  ips_pgdata:
    name: ips_pgdata
services:
  aidbox-db:
    image: healthsamurai/aidboxdb:16.1
    pull_policy: always
    ports:
      - "${PGHOSTPORT}:5432"
    volumes:
      - "ips_pgdata:/data:delegated"
    environment:
      POSTGRES_USER: "${PGUSER}"
      POSTGRES_PASSWORD: "${PGPASSWORD}"
      POSTGRES_DB: "${PGDATABASE}"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      timeout: 5s
      retries: 10

  aidbox:
    image: healthsamurai/aidboxone:edge
    pull_policy: always
    depends_on:
      aidbox-db:
        condition: service_healthy
    ports:
      - "${AIDBOX_PORT}:${AIDBOX_PORT}"
    env_file:
      - .env
    volumes:
      - ./zenproject:/zenproject

  seed:
    image: ghcr.io/beda-software/fhir_seeder:2097655dada8044ed942a3167d26f136456660a7
    env_file:
      - .env
    volumes:
      - ./resources/seeds:/app/data
    command:
      - seed
      - "--server=${AIDBOX_BASE_URL}"
      - "--source=/app/data"
      - "--type=seeds"
      - "--username=${AIDBOX_CLIENT_ID}"
      - "--password=${AIDBOX_CLIENT_SECRET}"

  node-app:
    hostname: node-app
    build:
      context: ./
      dockerfile: Dockerfile.dev
    ports:
      - 4000:4000
    user: node
    command: sh -c "rsync -ar /usr/src/app-cache/node_modules/. /usr/src/app/node_modules && pnpm run dev"
    env_file:
      - .env
    volumes:
      - ./:/usr/src/app
  scriber:
    image: registry.beda.software/emr/ai-scribe:latest
    environment:
      - OPENAI_API_KEY
      - FHIR_SERVER_URL=http://aidbox:8888
